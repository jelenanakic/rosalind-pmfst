def RosalindOutput(permutations):
  out=[]

  for p in permutations:
    line='('+' '.join(p)+')'
    out.append(line)
  return '\n'.join(out)

def ChangeSign(number):
  if number[0]=='+':
    number=number.replace('+','-')
  else:
    number=number.replace('-','+')
  return number

def Reverse(permutation,start,end):
  rev_segment=[]
  segment=permutation[start:(end+1)]
  new_permutation=[]

  for i in range(len(segment)-1,-1,-1):
    rev_segment.append(ChangeSign(segment[i]))
  new_permutation=permutation[:start]+rev_segment+permutation[end+1:]

  return new_permutation

def GreedySorting(P):
  n=len(P)
  permutations=[]

  for i in range(1,n+1):
    if P[i-1][1:]!=str(i):
         for j in range(i,n):
          if P[j][1:]==str(i):
            P=Reverse(P,i-1,j)
            permutations.append(P)
            break
    if P[i-1][0]=='-':
      P=Reverse(P,i-1,i-1)
      permutations.append(P)
  
  return RosalindOutput(permutations)

with open("/rosalind_ba6a (2).txt") as file:
    line = file.readline()
P=line[1:len(line)-2] #bez ( i \n
P=P.split(' ')
print(GreedySorting(P))
